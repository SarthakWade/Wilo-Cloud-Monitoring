{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///Users/adityagarud/Wilo-Cloud-Monitoring/frontend/src/components/Dashboard.tsx"],"sourcesContent":["'use client';\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport {\n  AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip,\n  ResponsiveContainer, LineChart, Line\n} from 'recharts';\nimport { FileText, BarChart3, Activity, Wifi, WifiOff, Sun, Moon, Download, Calendar, ChevronDown, ChevronRight, Folder, FolderOpen } from 'lucide-react';\nimport Image from 'next/image';\n\ninterface DataPoint {\n  timestamp: string;\n  acceleration: number;\n}\n\ninterface FileData {\n  filename: string;\n  data: DataPoint[];\n}\n\ntype AggregationType =\n  | 'max'\n  | 'min'\n  | 'average'\n  | 'mean'\n  | 'standardDeviation'\n  | 'skewness';\n\nconst aggregateData = (\n  data: DataPoint[],\n  zoom: 'months' | 'dates' | 'time',\n  aggregation: AggregationType\n) => {\n  const grouped: Record<string, DataPoint[]> = {};\n\n  data.forEach((d) => {\n    const date = new Date(d.timestamp);\n    let key: string;\n\n    if (zoom === 'months')\n      key = `${date.getFullYear()}-${String(date.getMonth() + 1).padStart(2, '0')}`;\n    else if (zoom === 'dates')\n      key = date.toISOString().split('T')[0];\n    else\n      key = `${date.toISOString().split('T')[0]} ${String(date.getHours()).padStart(2, '0')}:${String(date.getMinutes()).padStart(2, '0')}`;\n\n    if (!grouped[key]) grouped[key] = [];\n    grouped[key].push(d);\n  });\n\n  return Object.entries(grouped).map(([key, points]) => {\n    const values = points.map((p) => p.acceleration);\n    let value: number;\n\n    switch (aggregation) {\n      case 'max': value = Math.max(...values); break;\n      case 'min': value = Math.min(...values); break;\n      case 'average':\n      case 'mean':\n        value = Math.round(values.reduce((a, b) => a + b, 0) / values.length);\n        break;\n      case 'standardDeviation': {\n        const mean = values.reduce((a, b) => a + b, 0) / values.length;\n        const variance = values.reduce((a, b) => a + Math.pow(b - mean, 2), 0) / values.length;\n        value = Math.round(Math.sqrt(variance));\n        break;\n      }\n      case 'skewness': {\n        const avg = values.reduce((a, b) => a + b, 0) / values.length;\n        const stdDev = Math.sqrt(values.reduce((a, b) => a + Math.pow(b - avg, 2), 0) / values.length);\n        const skew = values.reduce((a, b) => a + Math.pow((b - avg) / stdDev, 3), 0) / values.length;\n        value = Math.round(skew * 1000) / 1000;\n        break;\n      }\n      default: value = Math.max(...values);\n    }\n\n    return { time: key, acceleration: value, dataPoints: points.length };\n  }).sort((a, b) => new Date(a.time).getTime() - new Date(b.time).getTime());\n};\n\nconst generateHistoricalData = (): FileData[] => {\n  const start = new Date('2025-01-01T00:00:00');\n  const now = new Date();\n  const files: FileData[] = [\n    { filename: 'SimFile_1.json', data: [] },\n    { filename: 'SimFile_2.json', data: [] }\n  ];\n\n  for (let time = new Date(start); time <= now; time.setHours(time.getHours() + 2)) {\n    files.forEach((file) => {\n      file.data.push({\n        timestamp: new Date(time).toISOString(),\n        acceleration: Math.round(1000 + Math.random() * (16000 - 1000)),\n      });\n    });\n  }\n\n  return files;\n};\n\nconst Dashboard: React.FC = () => {\n  const [fileData, setFileData] = useState<FileData[]>([]);\n  const [selectedFile, setSelectedFile] = useState<string>('');\n  const [selectedFileData, setSelectedFileData] = useState<DataPoint[]>([]);\n  const [mainChartData, setMainChartData] = useState<{ time: string; acceleration: number; dataPoints: number }[]>([]);\n  const [zoomLevel, setZoomLevel] = useState<'months' | 'dates' | 'time'>('months');\n  const [aggregationType, setAggregationType] = useState<AggregationType>('max');\n  const [domain, setDomain] = useState<[string, string] | undefined>(undefined);\n  const [isConnected, setIsConnected] = useState<boolean>(false);\n  const [samplingRate, setSamplingRate] = useState<number>(800);\n  const [isDarkMode, setIsDarkMode] = useState<boolean>(false);\n  const chartRef = useRef<HTMLDivElement>(null);\n  const fileChartRef = useRef<HTMLDivElement>(null);\n  const wsRef = useRef<WebSocket | null>(null);\n  const [wsStatus, setWsStatus] = useState<'disconnected' | 'connecting' | 'connected'>('disconnected');\n  const [showCalendarBrowser, setShowCalendarBrowser] = useState<boolean>(false);\n  const [folderStructure, setFolderStructure] = useState<Record<string, unknown>>({});\n  const [expandedNodes, setExpandedNodes] = useState<Set<string>>(new Set());\n\n  // Dummy folder structure for demonstration\n  const dummyFolderStructure = {\n    \"2025\": {\n      \"01\": {\n        \"Week_1\": {\n          \"01\": [\n            { filename: \"143022.csv\", path: \"2025/01/Week_1/01/143022.csv\", size: 2048, modified: Date.now() / 1000 },\n            { filename: \"143023.csv\", path: \"2025/01/Week_1/01/143023.csv\", size: 2156, modified: Date.now() / 1000 },\n            { filename: \"143024.csv\", path: \"2025/01/Week_1/01/143024.csv\", size: 1987, modified: Date.now() / 1000 }\n          ],\n          \"02\": [\n            { filename: \"090015.csv\", path: \"2025/01/Week_1/02/090015.csv\", size: 2234, modified: Date.now() / 1000 },\n            { filename: \"090016.csv\", path: \"2025/01/Week_1/02/090016.csv\", size: 2098, modified: Date.now() / 1000 }\n          ],\n          \"03\": [\n            { filename: \"120030.csv\", path: \"2025/01/Week_1/03/120030.csv\", size: 2345, modified: Date.now() / 1000 },\n            { filename: \"120031.csv\", path: \"2025/01/Week_1/03/120031.csv\", size: 2123, modified: Date.now() / 1000 },\n            { filename: \"120032.csv\", path: \"2025/01/Week_1/03/120032.csv\", size: 2267, modified: Date.now() / 1000 }\n          ]\n        },\n        \"Week_2\": {\n          \"08\": [\n            { filename: \"154500.csv\", path: \"2025/01/Week_2/08/154500.csv\", size: 2456, modified: Date.now() / 1000 },\n            { filename: \"154501.csv\", path: \"2025/01/Week_2/08/154501.csv\", size: 2334, modified: Date.now() / 1000 }\n          ],\n          \"09\": [\n            { filename: \"101245.csv\", path: \"2025/01/Week_2/09/101245.csv\", size: 2178, modified: Date.now() / 1000 }\n          ]\n        }\n      },\n      \"02\": {\n        \"Week_1\": {\n          \"01\": [\n            { filename: \"083015.csv\", path: \"2025/02/Week_1/01/083015.csv\", size: 2567, modified: Date.now() / 1000 }\n          ]\n        }\n      }\n    },\n    \"2024\": {\n      \"12\": {\n        \"Week_4\": {\n          \"28\": [\n            { filename: \"235959.csv\", path: \"2024/12/Week_4/28/235959.csv\", size: 1876, modified: Date.now() / 1000 }\n          ],\n          \"31\": [\n            { filename: \"235958.csv\", path: \"2024/12/Week_4/31/235958.csv\", size: 2001, modified: Date.now() / 1000 },\n            { filename: \"235959.csv\", path: \"2024/12/Week_4/31/235959.csv\", size: 1999, modified: Date.now() / 1000 }\n          ]\n        }\n      }\n    }\n  };\n\n  // Load historical data once and setup WebSocket\n  const handleWebSocketMessage = (data: {\n    type: string;\n    data?: { connected: boolean; sampling_rate: number };\n    files?: string[];\n    structure?: Record<string, unknown>;\n    command?: string;\n    success?: boolean;\n    new_rate?: number;\n    message?: string;\n    filename?: string;\n  }) => {\n    switch (data.type) {\n      case 'status':\n        // Update connection status and sampling rate from backend\n        if (data.data) {\n          setIsConnected(data.data.connected);\n          setSamplingRate(data.data.sampling_rate);\n        }\n        break;\n\n      case 'new_file':\n        // Handle new CSV file notification\n        console.log('New CSV file created:', data.filename);\n        // Request updated file list from backend\n        if (wsRef.current?.readyState === WebSocket.OPEN) {\n          wsRef.current.send(JSON.stringify({ command: 'get_file_list' }));\n        }\n        break;\n\n      case 'file_list':\n        // Update file list from backend\n        if (data.files && data.files.length > 0) {\n          // Convert backend CSV files to frontend format\n          // For now, keep using historical data for the main chart\n          // In a full implementation, you'd load actual CSV data here\n          console.log('Received file list from backend:', data.files);\n        }\n        break;\n\n      case 'folder_structure':\n        // Update folder structure for calendar browser\n        if (data.structure) {\n          setFolderStructure(data.structure);\n        }\n        console.log('Received folder structure:', data.structure);\n        break;\n\n      case 'command_response':\n        if (data.command === 'set_sampling_rate') {\n          if (data.success && data.new_rate) {\n            setSamplingRate(data.new_rate);\n            console.log(`Sampling rate updated to ${data.new_rate} Hz`);\n          } else {\n            console.error('Failed to update sampling rate');\n          }\n        }\n        break;\n\n      case 'error':\n        console.error('WebSocket error:', data.message);\n        break;\n\n      default:\n        console.log('Unknown WebSocket message type:', data.type);\n    }\n  };\n\n  const connectWebSocket = useCallback(() => {\n    if (wsRef.current?.readyState === WebSocket.OPEN) {\n      return; // Already connected\n    }\n\n    setWsStatus('connecting');\n\n    try {\n      const ws = new WebSocket('ws://localhost:8765');\n\n      ws.onopen = () => {\n        console.log('WebSocket connected');\n        setWsStatus('connected');\n        setIsConnected(true);\n        wsRef.current = ws;\n\n        // Request initial status\n        ws.send(JSON.stringify({ command: 'get_status' }));\n      };\n\n      ws.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          handleWebSocketMessage(data);\n        } catch (error) {\n          console.error('Error parsing WebSocket message:', error);\n        }\n      };\n\n      ws.onclose = () => {\n        console.log('WebSocket disconnected');\n        setWsStatus('disconnected');\n        setIsConnected(false);\n        wsRef.current = null;\n      };\n\n      ws.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        setWsStatus('disconnected');\n        setIsConnected(false);\n      };\n\n    } catch (error) {\n      console.error('Failed to create WebSocket connection:', error);\n      setWsStatus('disconnected');\n      setIsConnected(false);\n    }\n  }, []);\n\n  useEffect(() => {\n    const data = generateHistoricalData();\n    setFileData(data);\n    setSelectedFile(data[0].filename);\n    setSelectedFileData(data[0].data);\n\n    // Auto-connect to WebSocket on component mount\n    connectWebSocket();\n\n    // Cleanup WebSocket on component unmount\n    return () => {\n      if (wsRef.current) {\n        wsRef.current.close();\n      }\n    };\n  }, [connectWebSocket]);\n\n  // Update charts whenever zoom, aggregation, or domain changes\n  useEffect(() => {\n    if (fileData.length > 0) {\n      let filteredData = fileData.flatMap((f) => f.data);\n      if (domain) {\n        const [start, end] = domain;\n        filteredData = filteredData.filter(\n          (d) => new Date(d.timestamp) >= new Date(start) && new Date(d.timestamp) <= new Date(end)\n        );\n      }\n      setMainChartData(aggregateData(filteredData, zoomLevel, aggregationType));\n\n      const file = fileData.find((f) => f.filename === selectedFile);\n      if (file) {\n        setSelectedFileData(\n          domain\n            ? file.data.filter(\n              (d) => new Date(d.timestamp) >= new Date(domain[0]) && new Date(d.timestamp) <= new Date(domain[1])\n            )\n            : file.data\n        );\n      }\n    }\n  }, [fileData, selectedFile, aggregationType, zoomLevel, domain]);\n\n  const handleFileSelect = (filename: string) => {\n    setSelectedFile(filename);\n    const file = fileData.find((f) => f.filename === filename);\n    if (file) setSelectedFileData(file.data);\n  };\n\n  const toggleTheme = () => {\n    setIsDarkMode(!isDarkMode);\n  };\n\n  const disconnectWebSocket = () => {\n    if (wsRef.current) {\n      wsRef.current.close();\n      wsRef.current = null;\n    }\n    setWsStatus('disconnected');\n    setIsConnected(false);\n  };\n\n  const toggleConnection = () => {\n    if (isConnected) {\n      disconnectWebSocket();\n    } else {\n      connectWebSocket();\n    }\n  };\n\n  const exportToCSV = (data: DataPoint[], filename: string) => {\n    const csvContent = [\n      'Timestamp,Acceleration',\n      ...data.map(point => `${point.timestamp},${point.acceleration}`)\n    ].join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `${filename.replace('.json', '')}_${new Date().toISOString().split('T')[0]}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n  const handleSamplingRateChange = (newRate: number) => {\n    // Send sampling rate change to backend via WebSocket\n    if (wsRef.current?.readyState === WebSocket.OPEN) {\n      const command = {\n        command: 'set_sampling_rate',\n        rate: newRate\n      };\n\n      wsRef.current.send(JSON.stringify(command));\n      console.log(`Sending sampling rate change to backend: ${newRate} Hz`);\n    } else {\n      // If not connected, just update local state\n      setSamplingRate(newRate);\n      console.log(`WebSocket not connected. Local sampling rate set to: ${newRate} Hz`);\n    }\n  };\n\n  const exportSelectedFileAsCSV = () => {\n    if (selectedFile && selectedFileData.length > 0) {\n      exportToCSV(selectedFileData, selectedFile);\n    }\n  };\n\n  const exportAllDataAsCSV = () => {\n    const allData = fileData.flatMap(file =>\n      file.data.map(point => ({\n        ...point,\n        filename: file.filename\n      }))\n    );\n\n    const csvContent = [\n      'Timestamp,Acceleration,Filename',\n      ...allData.map(point => `${point.timestamp},${point.acceleration},${point.filename}`)\n    ].join('\\n');\n\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\n    const link = document.createElement('a');\n    const url = URL.createObjectURL(blob);\n    link.setAttribute('href', url);\n    link.setAttribute('download', `all_sensor_data_${new Date().toISOString().split('T')[0]}.csv`);\n    link.style.visibility = 'hidden';\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  };\n\n\n\n  const handleWheelZoom = (e: React.WheelEvent<HTMLDivElement>) => {\n    e.preventDefault(); // Prevent page scrolling when over the chart\n    if (!chartRef.current || !mainChartData.length) return;\n\n    const chartRect = chartRef.current.getBoundingClientRect();\n    const mouseX = e.clientX - chartRect.left;\n    const chartWidth = chartRect.width;\n    const normalizedX = mouseX / chartWidth; // 0 to 1\n\n    // Find the closest data point to the mouse position\n    const dataIndex = Math.round(normalizedX * (mainChartData.length - 1));\n    const selectedTime = mainChartData[dataIndex]?.time;\n    if (!selectedTime) return;\n\n    let start: Date, end: Date;\n    if (e.deltaY < 0) { // Scroll up (zoom in)\n      if (zoomLevel === 'months') {\n        const [year, month] = selectedTime.split('-').map(Number);\n        start = new Date(year, month - 1, 1);\n        end = new Date(year, month, 0);\n        setZoomLevel('dates');\n      } else if (zoomLevel === 'dates') {\n        start = new Date(selectedTime);\n        end = new Date(selectedTime);\n        start.setHours(0, 0, 0, 0);\n        end.setHours(23, 59, 59, 999);\n        setZoomLevel('time');\n      } else {\n        return; // No further zoom in time level\n      }\n      setDomain([start.toISOString(), end.toISOString()]);\n    } else if (e.deltaY > 0) { // Scroll down (zoom out)\n      if (zoomLevel === 'time') {\n        const date = new Date(selectedTime);\n        start = new Date(date.getFullYear(), date.getMonth(), 1);\n        end = new Date(date.getFullYear(), date.getMonth() + 1, 0);\n        setZoomLevel('dates');\n        setDomain([start.toISOString(), end.toISOString()]);\n      } else if (zoomLevel === 'dates') {\n        setZoomLevel('months');\n        setDomain(undefined);\n      }\n    }\n  };\n\n  const handleResetZoom = () => {\n    setZoomLevel('months');\n    setDomain(undefined);\n  };\n\n  const openCalendarBrowser = () => {\n    setShowCalendarBrowser(true);\n    // Use dummy data for now, or request from backend if connected\n    if (wsRef.current?.readyState === WebSocket.OPEN) {\n      wsRef.current.send(JSON.stringify({ command: 'get_folder_structure' }));\n    } else {\n      // Use dummy data for demonstration\n      setFolderStructure(dummyFolderStructure);\n    }\n  };\n\n  const closeCalendarBrowser = () => {\n    setShowCalendarBrowser(false);\n  };\n\n  const toggleNode = (nodePath: string) => {\n    const newExpanded = new Set(expandedNodes);\n    if (newExpanded.has(nodePath)) {\n      newExpanded.delete(nodePath);\n    } else {\n      newExpanded.add(nodePath);\n    }\n    setExpandedNodes(newExpanded);\n  };\n\n  const handleCalendarFileSelect = (filePath: string) => {\n    console.log('Selected file from calendar:', filePath);\n    // Add visual feedback for file selection\n    // TODO: Load actual CSV data and update charts\n    // Close calendar browser after selection\n    setShowCalendarBrowser(false);\n  };\n\n  const renderFolderNode = (name: string, content: Record<string, unknown> | { filename: string; path: string; size: number; modified: number }, path: string, level: number = 0) => {\n    const isExpanded = expandedNodes.has(path);\n    const isFile = typeof content === 'object' && 'filename' in content;\n    const hasChildren = typeof content === 'object' && !('filename' in content);\n\n    if (isFile) {\n      // Render file with glass effect\n      return (\n        <div\n          key={path}\n          className={`\n            flex items-center space-x-3 py-3 px-4 rounded-xl cursor-pointer transition-all duration-200\n            backdrop-blur-sm border border-transparent\n            ${isDarkMode\n              ? 'hover:bg-gray-700/50 hover:border-gray-600/30 text-gray-300'\n              : 'hover:bg-white/50 hover:border-gray-300/30 text-gray-700'\n            }\n            hover:scale-[1.02] active:scale-[0.98]\n          `}\n          style={{ marginLeft: `${level * 24}px` }}\n          onClick={() => handleCalendarFileSelect((content as { path: string }).path)}\n        >\n          <div className=\"p-1 rounded-lg bg-blue-500/20 backdrop-blur-sm\">\n            <FileText className=\"h-4 w-4 text-blue-500\" />\n          </div>\n          <div className=\"flex-1\">\n            <span className=\"text-sm font-medium\">{(content as { filename: string }).filename}</span>\n            <div className=\"flex items-center space-x-2 mt-1\">\n              <span className={`text-xs px-2 py-1 rounded-full ${isDarkMode ? 'bg-gray-700/50 text-gray-400' : 'bg-gray-100/50 text-gray-500'}`}>\n                {((content as { size: number }).size / 1024).toFixed(1)}KB\n              </span>\n              <span className={`text-xs ${isDarkMode ? 'text-gray-500' : 'text-gray-400'}`}>\n                {new Date((content as { modified: number }).modified * 1000).toLocaleTimeString()}\n              </span>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    if (hasChildren) {\n      // Render folder with glass effect\n      return (\n        <div key={path}>\n          <div\n            className={`\n              flex items-center space-x-3 py-3 px-4 rounded-xl cursor-pointer transition-all duration-200\n              backdrop-blur-sm border border-transparent\n              ${isDarkMode\n                ? 'hover:bg-gray-700/50 hover:border-gray-600/30 text-gray-200'\n                : 'hover:bg-white/50 hover:border-gray-300/30 text-gray-800'\n              }\n              hover:scale-[1.02] active:scale-[0.98]\n            `}\n            style={{ marginLeft: `${level * 24}px` }}\n            onClick={() => toggleNode(path)}\n          >\n            <div className=\"flex items-center space-x-2\">\n              {isExpanded ? (\n                <ChevronDown className={`h-4 w-4 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`} />\n              ) : (\n                <ChevronRight className={`h-4 w-4 ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`} />\n              )}\n              <div className=\"p-1 rounded-lg bg-yellow-500/20 backdrop-blur-sm\">\n                {isExpanded ? (\n                  <FolderOpen className=\"h-4 w-4 text-yellow-500\" />\n                ) : (\n                  <Folder className=\"h-4 w-4 text-yellow-500\" />\n                )}\n              </div>\n            </div>\n            <span className=\"text-sm font-semibold\">{name}</span>\n            <span className={`text-xs px-2 py-1 rounded-full ${isDarkMode ? 'bg-gray-700/50 text-gray-400' : 'bg-gray-100/50 text-gray-500'}`}>\n              {Object.keys(content).length} items\n            </span>\n          </div>\n\n          <div className={`overflow-hidden transition-all duration-300 ease-in-out ${isExpanded ? 'max-h-screen opacity-100' : 'max-h-0 opacity-0'\n            }`}>\n            <div className=\"mt-2 space-y-1 pl-2\">\n              {Object.entries(content as Record<string, unknown>).map(([childName, childContent]) =>\n                renderFolderNode(childName, childContent as Record<string, unknown> | { filename: string; path: string; size: number; modified: number }, `${path}/${childName}`, level + 1)\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <div className={`min-h-screen transition-colors ${isDarkMode ? 'bg-gray-900' : 'bg-[#efefef]'}`}>\n      {/* Header */}\n      <header className=\"bg-[#019c7c] text-white p-4 shadow-lg\">\n        <div className=\"flex items-center justify-between max-w-7xl mx-auto\">\n          <div className=\"flex items-center space-x-3\">\n            <div className=\"relative\">\n              <Image\n                src=\"/vu.png\"\n                alt=\"VU Logo\"\n                width={60}\n                height={60}\n                className=\"rounded-lg border-3 border-white shadow-lg ring-2 ring-gray-800/50 object-cover\"\n              />\n            </div>\n            <div className=\"relative\">\n              <Image\n                src=\"/wilo.png\"\n                alt=\"Wilo Logo\"\n                width={60}\n                height={60}\n                className=\"rounded-lg border-3 border-white shadow-lg ring-2 ring-gray-800/50 object-cover\"\n              />\n            </div>\n          </div>\n          <div className=\"flex items-center space-x-6\">\n            <button\n              onClick={toggleTheme}\n              className=\"p-2 rounded-lg hover:bg-[#018a6f] transition-colors\"\n              title={isDarkMode ? 'Switch to Light Mode' : 'Switch to Dark Mode'}\n            >\n              {isDarkMode ? <Sun className=\"h-5 w-5\" /> : <Moon className=\"h-5 w-5\" />}\n            </button>\n            <div className=\"text-right\">\n              <h1 className=\"text-2xl font-bold\">DASHBOARD</h1>\n              <p className=\"text-sm opacity-90\">Total Files: {fileData.length}</p>\n            </div>\n          </div>\n        </div>\n      </header>\n\n      <div className=\"flex max-w-7xl mx-auto p-6 gap-6\">\n        {/* Sidebar */}\n        <div className=\"w-80 space-y-6\">\n          {/* System Status */}\n          <div className={`rounded-lg p-6 shadow-md transition-colors ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`}>\n            <h2 className={`text-lg font-semibold mb-4 flex items-center ${isDarkMode ? 'text-white' : 'text-gray-800'}`}>\n              <Activity className=\"h-5 w-5 mr-2 text-[#019c7c]\" />\n              System Status\n            </h2>\n\n            {/* Connection Status */}\n            <div className=\"mb-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className={`text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Connection</span>\n                <button\n                  onClick={toggleConnection}\n                  disabled={wsStatus === 'connecting'}\n                  className={`flex items-center space-x-2 px-3 py-1 rounded-full text-sm font-medium transition-colors ${wsStatus === 'connected'\n                    ? 'bg-green-100 text-green-800 hover:bg-green-200'\n                    : wsStatus === 'connecting'\n                      ? 'bg-yellow-100 text-yellow-800 cursor-not-allowed'\n                      : 'bg-red-100 text-red-800 hover:bg-red-200'\n                    }`}\n                >\n                  {wsStatus === 'connected' ? (\n                    <Wifi className=\"h-4 w-4\" />\n                  ) : wsStatus === 'connecting' ? (\n                    <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-yellow-800\"></div>\n                  ) : (\n                    <WifiOff className=\"h-4 w-4\" />\n                  )}\n                  <span>\n                    {wsStatus === 'connected' ? 'Connected' :\n                      wsStatus === 'connecting' ? 'Connecting...' : 'Disconnected'}\n                  </span>\n                </button>\n              </div>\n              <div className=\"text-xs text-gray-500\">\n                {wsStatus === 'connected' ? 'Real-time data streaming' :\n                  wsStatus === 'connecting' ? 'Establishing connection...' : 'Using historical data'}\n              </div>\n            </div>\n\n            {/* Sampling Rate Control */}\n            <div className=\"mb-4\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className={`text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Sampling Rate</span>\n                <span className={`text-lg font-bold text-[#019c7c]`}>{samplingRate} Hz</span>\n              </div>\n\n              {/* Rate Slider */}\n              <div className=\"mb-3\">\n                <input\n                  type=\"range\"\n                  min=\"100\"\n                  max=\"1000\"\n                  step=\"50\"\n                  value={samplingRate}\n                  onChange={(e) => handleSamplingRateChange(Number(e.target.value))}\n                  className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer slider\"\n                  style={{\n                    background: `linear-gradient(to right, #019c7c 0%, #019c7c ${(samplingRate - 100) / 9}%, #e5e7eb ${(samplingRate - 100) / 9}%, #e5e7eb 100%)`\n                  }}\n                />\n              </div>\n\n              {/* Quick Rate Buttons */}\n              <div className=\"flex space-x-2\">\n                {[200, 400, 600, 800].map((rate) => (\n                  <button\n                    key={rate}\n                    onClick={() => handleSamplingRateChange(rate)}\n                    className={`px-2 py-1 rounded text-xs font-medium transition-colors ${samplingRate === rate\n                      ? 'bg-[#019c7c] text-white'\n                      : isDarkMode\n                        ? 'bg-gray-700 text-gray-300 hover:bg-gray-600'\n                        : 'bg-gray-100 text-gray-600 hover:bg-gray-200'\n                      }`}\n                  >\n                    {rate}\n                  </button>\n                ))}\n              </div>\n            </div>\n\n            {/* Data Quality */}\n            <div>\n              <div className=\"flex items-center justify-between mb-2\">\n                <span className={`text-sm font-medium ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>Data Quality</span>\n                <span className=\"text-sm font-medium text-green-600\">Excellent</span>\n              </div>\n              <div className=\"text-xs text-gray-500\">\n                {isConnected ? 'Real-time data streaming' : 'Using historical data'}\n              </div>\n            </div>\n          </div>\n\n          {/* File List */}\n          <div className={`rounded-lg p-6 shadow-md transition-colors ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`}>\n            <div className=\"flex items-center justify-between mb-4\">\n              <h2 className={`text-lg font-semibold flex items-center ${isDarkMode ? 'text-white' : 'text-gray-800'}`}>\n                <FileText className=\"h-5 w-5 mr-2 text-[#019c7c]\" />\n                Data Files\n              </h2>\n              <button\n                onClick={openCalendarBrowser}\n                className=\"flex items-center space-x-2 px-3 py-1 rounded-lg bg-[#019c7c] text-white hover:bg-[#018a6f] transition-colors text-sm\"\n              >\n                <Calendar className=\"h-4 w-4\" />\n                <span>Browse</span>\n              </button>\n            </div>\n            <div className=\"space-y-2 max-h-96 overflow-y-auto\">\n              {fileData.map((file) => (\n                <button\n                  key={file.filename}\n                  onClick={() => handleFileSelect(file.filename)}\n                  className={`w-full text-left p-3 rounded-lg transition-colors ${selectedFile === file.filename\n                    ? 'bg-[#019c7c] text-white'\n                    : isDarkMode\n                      ? 'bg-gray-700 hover:bg-gray-600 text-gray-300'\n                      : 'bg-gray-100 hover:bg-gray-200 text-gray-700'\n                    }`}\n                >\n                  {file.filename}\n                </button>\n              ))}\n            </div>\n          </div>\n\n          {/* Export Options */}\n          <div className={`rounded-lg p-6 shadow-md transition-colors ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`}>\n            <h2 className={`text-lg font-semibold mb-4 flex items-center ${isDarkMode ? 'text-white' : 'text-gray-800'}`}>\n              <Download className=\"h-5 w-5 mr-2 text-[#019c7c]\" />\n              Export Options\n            </h2>\n\n            {/* Data Export */}\n            <div className=\"space-y-3\">\n              <div>\n                <h3 className={`text-sm font-medium mb-2 ${isDarkMode ? 'text-gray-300' : 'text-gray-600'}`}>\n                  Data Export\n                </h3>\n                <div className=\"space-y-2\">\n                  <button\n                    onClick={exportSelectedFileAsCSV}\n                    disabled={!selectedFile}\n                    className={`w-full text-left p-3 rounded-lg transition-colors flex items-center justify-between ${selectedFile\n                      ? isDarkMode\n                        ? 'bg-gray-700 hover:bg-gray-600 text-gray-300'\n                        : 'bg-gray-100 hover:bg-gray-200 text-gray-700'\n                      : isDarkMode\n                        ? 'bg-gray-800 text-gray-500 cursor-not-allowed'\n                        : 'bg-gray-50 text-gray-400 cursor-not-allowed'\n                      }`}\n                  >\n                    <span className=\"text-sm\">Export Selected File as CSV</span>\n                    <FileText className=\"h-4 w-4\" />\n                  </button>\n\n                  <button\n                    onClick={exportAllDataAsCSV}\n                    className={`w-full text-left p-3 rounded-lg transition-colors flex items-center justify-between ${isDarkMode\n                      ? 'bg-gray-700 hover:bg-gray-600 text-gray-300'\n                      : 'bg-gray-100 hover:bg-gray-200 text-gray-700'\n                      }`}\n                  >\n                    <span className=\"text-sm\">Export All Data as CSV</span>\n                    <FileText className=\"h-4 w-4\" />\n                  </button>\n                </div>\n              </div>\n\n\n            </div>\n          </div>\n        </div>\n\n        {/* Main Graphs */}\n        <div className=\"flex-1 space-y-6\">\n          {/* Main aggregated chart */}\n          <div className={`rounded-lg p-6 shadow-md transition-colors ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`}>\n            <div className=\"flex items-center justify-between mb-6\">\n              <div className=\"flex items-center space-x-4\">\n                <BarChart3 className=\"h-6 w-6 text-[#019c7c]\" />\n                <h2 className={`text-xl font-semibold ${isDarkMode ? 'text-white' : 'text-gray-800'}`}>Acceleration Overview</h2>\n              </div>\n              <div className=\"flex items-center space-x-4\">\n                <select\n                  value={aggregationType}\n                  onChange={(e) => setAggregationType(e.target.value as AggregationType)}\n                  className={`p-2 border rounded-lg focus:outline-none focus:ring-2 focus:ring-[#019c7c] transition-colors ${isDarkMode\n                    ? 'bg-gray-700 border-gray-600 text-white'\n                    : 'bg-white border-gray-300 text-gray-800'\n                    }`}\n                >\n                  <option value=\"max\">Max</option>\n                  <option value=\"min\">Min</option>\n                  <option value=\"average\">Average</option>\n                  <option value=\"mean\">Mean</option>\n                  <option value=\"standardDeviation\">Standard Deviation</option>\n                  <option value=\"skewness\">Skewness</option>\n                </select>\n                <button\n                  onClick={handleResetZoom}\n                  className=\"bg-[#019c7c] text-white py-2 px-4 rounded-lg hover:bg-[#018a6f] transition-colors\"\n                >\n                  Reset Zoom\n                </button>\n              </div>\n            </div>\n\n            <div ref={chartRef} onWheel={handleWheelZoom} className=\"relative\">\n              {mainChartData.length > 0 ? (\n                <ResponsiveContainer width=\"100%\" height={450}>\n                  <AreaChart\n                    data={mainChartData}\n                    margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n                  >\n                    <defs>\n                      <linearGradient id=\"areaGradient\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                        <stop offset=\"0%\" stopColor=\"#019c7c\" stopOpacity={0.8} />\n                        <stop offset=\"50%\" stopColor=\"#019c7c\" stopOpacity={0.4} />\n                        <stop offset=\"100%\" stopColor=\"#019c7c\" stopOpacity={0.1} />\n                      </linearGradient>\n                    </defs>\n                    <CartesianGrid\n                      strokeDasharray=\"2 4\"\n                      stroke={isDarkMode ? \"#374151\" : \"#e5e7eb\"}\n                      strokeOpacity={0.5}\n                    />\n                    <XAxis\n                      dataKey=\"time\"\n                      stroke={isDarkMode ? \"#9ca3af\" : \"#6b7280\"}\n                      fontSize={12}\n                      tickLine={false}\n                      axisLine={false}\n                      tickMargin={10}\n                      tickFormatter={(value) => {\n                        if (zoomLevel === 'months') return value;\n                        if (zoomLevel === 'dates') return new Date(value).toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n                        return new Date(value).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' });\n                      }}\n                    />\n                    <YAxis\n                      stroke={isDarkMode ? \"#9ca3af\" : \"#6b7280\"}\n                      fontSize={12}\n                      tickLine={false}\n                      axisLine={false}\n                      tickMargin={10}\n                      tickFormatter={(value) => `${(value / 1000).toFixed(1)}k`}\n                    />\n                    <Tooltip\n                      contentStyle={{\n                        backgroundColor: isDarkMode ? '#1f2937' : '#ffffff',\n                        border: 'none',\n                        borderRadius: '12px',\n                        boxShadow: '0 10px 25px rgba(0, 0, 0, 0.1)',\n                        color: isDarkMode ? '#ffffff' : '#1f2937',\n                        fontSize: '14px',\n                        padding: '12px 16px'\n                      }}\n                      formatter={(value: number) => [\n                        `${Number(value).toLocaleString()} m/s²`,\n                        aggregationType.charAt(0).toUpperCase() + aggregationType.slice(1)\n                      ]}\n                      labelFormatter={(label) => {\n                        if (zoomLevel === 'months') return `Month: ${label}`;\n                        if (zoomLevel === 'dates') return `Date: ${new Date(label).toLocaleDateString()}`;\n                        return `Time: ${label}`;\n                      }}\n                      cursor={{ stroke: '#019c7c', strokeWidth: 1, strokeDasharray: '4 4' }}\n                    />\n                    <Area\n                      type=\"monotone\"\n                      dataKey=\"acceleration\"\n                      stroke=\"#019c7c\"\n                      fill=\"url(#areaGradient)\"\n                      strokeWidth={2.5}\n                      dot={false}\n                      activeDot={{\n                        r: 6,\n                        fill: '#019c7c',\n                        stroke: '#ffffff',\n                        strokeWidth: 2,\n                        filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.1))'\n                      }}\n                    />\n                  </AreaChart>\n                </ResponsiveContainer>\n              ) : (\n                <div className={`h-[450px] flex flex-col items-center justify-center ${isDarkMode ? 'text-gray-400' : 'text-gray-500'}`}>\n                  <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-[#019c7c] mb-4\"></div>\n                  <p className=\"text-lg font-medium\">Loading acceleration data...</p>\n                  <p className=\"text-sm opacity-75 mt-1\">Preparing visualization</p>\n                </div>\n              )}\n\n              {/* Zoom level indicator */}\n              <div className=\"absolute top-4 right-4\">\n                <div className={`px-3 py-1 rounded-full text-xs font-medium ${isDarkMode ? 'bg-gray-700 text-gray-300' : 'bg-gray-100 text-gray-600'\n                  }`}>\n                  Zoom: {zoomLevel.charAt(0).toUpperCase() + zoomLevel.slice(1)}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          {/* Selected file chart */}\n          {selectedFile && (\n            <div className={`rounded-lg p-6 shadow-md transition-colors ${isDarkMode ? 'bg-gray-800' : 'bg-white'}`}>\n              <div className=\"flex items-center justify-between mb-6\">\n                <h3 className={`text-lg font-semibold ${isDarkMode ? 'text-white' : 'text-gray-800'}`}>\n                  File: {selectedFile}\n                </h3>\n                <div className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                  Records: {selectedFileData.length}\n                </div>\n              </div>\n              <div ref={fileChartRef} className=\"relative\">\n                <ResponsiveContainer width=\"100%\" height={350}>\n                  <LineChart\n                    data={selectedFileData.slice(-50)} // Show last 50 points for better performance\n                    margin={{ top: 20, right: 30, left: 20, bottom: 20 }}\n                  >\n                    <defs>\n                      <linearGradient id=\"lineGradient\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                        <stop offset=\"0%\" stopColor=\"#06b6d4\" stopOpacity={0.8} />\n                        <stop offset=\"50%\" stopColor=\"#019c7c\" stopOpacity={1} />\n                        <stop offset=\"100%\" stopColor=\"#10b981\" stopOpacity={0.8} />\n                      </linearGradient>\n                    </defs>\n                    <CartesianGrid\n                      strokeDasharray=\"2 4\"\n                      stroke={isDarkMode ? \"#374151\" : \"#e5e7eb\"}\n                      strokeOpacity={0.3}\n                    />\n                    <XAxis\n                      dataKey=\"timestamp\"\n                      stroke={isDarkMode ? \"#9ca3af\" : \"#6b7280\"}\n                      fontSize={11}\n                      tickLine={false}\n                      axisLine={false}\n                      tickMargin={8}\n                      tickFormatter={(value) => new Date(value).toLocaleTimeString('en-US', {\n                        hour: '2-digit',\n                        minute: '2-digit'\n                      })}\n                    />\n                    <YAxis\n                      stroke={isDarkMode ? \"#9ca3af\" : \"#6b7280\"}\n                      fontSize={11}\n                      tickLine={false}\n                      axisLine={false}\n                      tickMargin={8}\n                      tickFormatter={(value) => `${(value / 1000).toFixed(1)}k`}\n                    />\n                    <Tooltip\n                      contentStyle={{\n                        backgroundColor: isDarkMode ? '#1f2937' : '#ffffff',\n                        border: 'none',\n                        borderRadius: '12px',\n                        boxShadow: '0 10px 25px rgba(0, 0, 0, 0.1)',\n                        color: isDarkMode ? '#ffffff' : '#1f2937',\n                        fontSize: '13px',\n                        padding: '10px 14px'\n                      }}\n                      formatter={(value: number) => [\n                        `${Number(value).toLocaleString()} m/s²`,\n                        'Acceleration'\n                      ]}\n                      labelFormatter={(label) => `Time: ${new Date(label).toLocaleString()}`}\n                      cursor={{ stroke: '#019c7c', strokeWidth: 1, strokeDasharray: '4 4' }}\n                    />\n                    <Line\n                      type=\"monotone\"\n                      dataKey=\"acceleration\"\n                      stroke=\"url(#lineGradient)\"\n                      strokeWidth={2.5}\n                      dot={false}\n                      activeDot={{\n                        r: 5,\n                        fill: '#019c7c',\n                        stroke: '#ffffff',\n                        strokeWidth: 2,\n                        filter: 'drop-shadow(0 2px 4px rgba(0,0,0,0.1))'\n                      }}\n                    />\n                  </LineChart>\n                </ResponsiveContainer>\n\n                {/* Data range indicator */}\n                <div className=\"absolute top-4 right-4\">\n                  <div className={`px-3 py-1 rounded-full text-xs font-medium ${isDarkMode ? 'bg-gray-700 text-gray-300' : 'bg-gray-100 text-gray-600'\n                    }`}>\n                    Latest {Math.min(50, selectedFileData.length)} points\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n\n      {/* Glass UI Calendar Browser Panel */}\n      {showCalendarBrowser && (\n        <div className=\"fixed inset-0 z-50 flex items-center justify-center p-4\">\n          {/* Glass Background Overlay */}\n          <div\n            className=\"absolute inset-0 backdrop-blur-md bg-black/20\"\n            onClick={closeCalendarBrowser}\n          ></div>\n\n          {/* Glass Panel */}\n          <div className=\"relative w-full max-w-5xl max-h-[85vh] rounded-2xl overflow-hidden\">\n            {/* Glass morphism container */}\n            <div className={`\n              backdrop-blur-xl border border-white/20 shadow-2xl\n              ${isDarkMode\n                ? 'bg-gray-900/80 shadow-black/50'\n                : 'bg-white/80 shadow-gray-900/20'\n              }\n            `}>\n              {/* Header with glass effect */}\n              <div className={`\n                px-8 py-6 border-b border-white/10\n                ${isDarkMode ? 'bg-gray-800/50' : 'bg-white/50'}\n              `}>\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"flex items-center space-x-3\">\n                    <div className=\"p-2 rounded-xl bg-[#019c7c]/20 backdrop-blur-sm\">\n                      <Calendar className=\"h-6 w-6 text-[#019c7c]\" />\n                    </div>\n                    <div>\n                      <h2 className={`text-2xl font-bold ${isDarkMode ? 'text-white' : 'text-gray-800'}`}>\n                        CSV File Browser\n                      </h2>\n                      <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                        Navigate through your sensor data files\n                      </p>\n                    </div>\n                  </div>\n                  <button\n                    onClick={closeCalendarBrowser}\n                    className={`\n                      p-3 rounded-xl transition-all duration-200 backdrop-blur-sm\n                      ${isDarkMode\n                        ? 'bg-gray-700/50 hover:bg-gray-600/50 text-gray-300 hover:text-white'\n                        : 'bg-gray-100/50 hover:bg-gray-200/50 text-gray-600 hover:text-gray-800'\n                      }\n                      hover:scale-105 active:scale-95\n                    `}\n                  >\n                    <svg className=\"h-6 w-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                      <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\n                    </svg>\n                  </button>\n                </div>\n              </div>\n\n              {/* Content Area */}\n              <div className=\"p-8 overflow-y-auto max-h-[60vh]\">\n                {Object.keys(folderStructure).length === 0 && Object.keys(dummyFolderStructure).length === 0 ? (\n                  <div className=\"text-center py-12\">\n                    <div className={`\n                      inline-flex p-6 rounded-2xl mb-6\n                      ${isDarkMode ? 'bg-gray-800/50' : 'bg-gray-100/50'}\n                      backdrop-blur-sm\n                    `}>\n                      <Calendar className={`h-16 w-16 ${isDarkMode ? 'text-gray-500' : 'text-gray-400'}`} />\n                    </div>\n                    <h3 className={`text-xl font-semibold mb-3 ${isDarkMode ? 'text-white' : 'text-gray-800'}`}>\n                      No CSV files found\n                    </h3>\n                    <p className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                      Start collecting sensor data to see files organized by date\n                    </p>\n                  </div>\n                ) : (\n                  <div className=\"space-y-4\">\n                    {/* Info Banner */}\n                    <div className={`\n                      p-4 rounded-xl border backdrop-blur-sm\n                      ${isDarkMode\n                        ? 'bg-blue-900/20 border-blue-500/20 text-blue-300'\n                        : 'bg-blue-50/50 border-blue-200/50 text-blue-700'\n                      }\n                    `}>\n                      <div className=\"flex items-center space-x-2\">\n                        <svg className=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\" />\n                        </svg>\n                        <span className=\"text-sm font-medium\">\n                          Structure: Year → Month → Week → Day → Files\n                        </span>\n                      </div>\n                    </div>\n\n                    {/* File Tree */}\n                    <div className={`\n                      rounded-xl border backdrop-blur-sm p-6\n                      ${isDarkMode\n                        ? 'bg-gray-800/30 border-gray-700/30'\n                        : 'bg-white/30 border-gray-200/30'\n                      }\n                    `}>\n                      <div className=\"space-y-2\">\n                        {Object.entries(Object.keys(folderStructure).length ? folderStructure : dummyFolderStructure).map(([year, yearContent]) =>\n                          renderFolderNode(year, yearContent as Record<string, unknown>, year, 0)\n                        )}\n                      </div>\n                    </div>\n                  </div>\n                )}\n              </div>\n\n              {/* Footer */}\n              <div className={`\n                px-8 py-6 border-t border-white/10\n                ${isDarkMode ? 'bg-gray-800/50' : 'bg-white/50'}\n              `}>\n                <div className=\"flex justify-between items-center\">\n                  <div className={`text-sm ${isDarkMode ? 'text-gray-400' : 'text-gray-600'}`}>\n                    Click folders to expand • Click files to select\n                  </div>\n                  <button\n                    onClick={closeCalendarBrowser}\n                    className=\"px-6 py-3 bg-[#019c7c] text-white rounded-xl hover:bg-[#018a6f] transition-all duration-200 backdrop-blur-sm hover:scale-105 active:scale-95 font-medium\"\n                  >\n                    Close Browser\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;"],"names":[],"mappings":"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","debugId":null}}]
}